ext {
	gradleVersion = '2.3'

	// Libraries
	reactiveStreamsVersion = '1.0.0.RC3'

	// Logging
	slf4jVersion = '1.7.10'
	logbackVersion = '1.1.3'

	// Network Transports
	nettyVersion = '4.0.26.Final'

	// Composition Libraries
	rxjava1Version = '1.0.8'
	reactorVersion = '2.0.0.RELEASE'

	// Testing
	mockitoVersion = '1.10.19'
	junitVersion = '4.12'

	javadocLinks = [
			"http://docs.oracle.com/javase/7/docs/api/",
			"http://www.reactive-streams.org/reactive-streams-1.0.0.RC3-javadoc/"
	] as String[]
}

allprojects {
	apply plugin: 'java'

	[compileJava, compileTestJava]*.options*.compilerArgs = [
			"-Xlint:varargs",
			"-Xlint:cast",
			"-Xlint:classfile",
			"-Xlint:dep-ann",
			"-Xlint:divzero",
			"-Xlint:empty",
			"-Xlint:finally",
			"-Xlint:overrides",
			"-Xlint:path",
			"-Xlint:processing",
			"-Xlint:static",
			"-Xlint:try",
			"-Xlint:deprecation",
			"-Xlint:unchecked",
			"-Xlint:-serial",      // intentionally disabled
			"-Xlint:-options",     // intentionally disabled
			"-Xlint:-fallthrough", // intentionally disabled
			"-Xlint:-rawtypes"     // TODO enable and fix warnings
	]
	
	compileJava {
		sourceCompatibility = 1.7
		targetCompatibility = 1.7
	}

	compileTestJava {
		sourceCompatibility = 1.8
		targetCompatibility = 1.8
	}

	repositories {
		maven { url 'http://repo.spring.io/libs-release' }
		jcenter()
		mavenCentral()
	}
}

subprojects { subproject ->
	dependencies {
		// Testing
		testCompile "junit:junit:$junitVersion",
				"org.hamcrest:hamcrest-library:1.3",
				"org.mockito:mockito-core:$mockitoVersion",
				"org.slf4j:slf4j-api:$slf4jVersion"
		testRuntime "ch.qos.logback:logback-classic:$logbackVersion"
	}
}

project('ripc-core') {
	description = 'Reactive IPC Core Components'
	dependencies {
		// Reactive Streams
		compile "org.reactivestreams:reactive-streams:$reactiveStreamsVersion"
	}
}

project('ripc-protocol-tcp') {
	description = 'Reactive IPC TCP Components'
	dependencies {
		// ripc-core
		compile project(":ripc-core")
	}
}

project('ripc-transport-netty4') {
	description = 'Reactive IPC Netty 4.x Transport Implementation'
	dependencies {
		// ripc-tcp
		compile project(":ripc-protocol-tcp")

		// Netty
		compile "io.netty:netty-all:$nettyVersion"
	}
}

project('ripc-composition-rxjava1') {
	description = 'Reactive IPC Composition Layer Implementation'
	dependencies {
		// ripc-tcp
		compile project(":ripc-transport-netty4")

		// RxJava 1.0
		compile "io.reactivex:rxjava:$rxjava1Version",
        'io.reactivex:rxjava-reactive-streams:0.3.0'
	}
}

project('ripc-composition-reactor') {
	description = 'Reactive IPC Composition Layer Implementation'
	dependencies {
		// ripc-tcp
		compile project(":ripc-transport-netty4")

		// Reactor
		compile "io.projectreactor:reactor-stream:$reactorVersion"
	}
}

configure(rootProject) {
	description = "Reactive IPC"

	task api(type: Javadoc) {
		group = "Documentation"
		description = "Generates aggregated Javadoc API documentation."
		title = "${rootProject.description} ${version} API"

		dependsOn {
			subprojects.collect {
				it.tasks.getByName("jar")
			}
		}
		options.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED
		options.author = true
		options.header = rootProject.description
		//options.overview = "src/api/overview.html"
		options.stylesheetFile = file("src/api/stylesheet.css")
		options.links(project.ext.javadocLinks)

		source subprojects.collect { project ->
			project.sourceSets.main.allJava
		}

		maxMemory = "1024m"
		destinationDir = new File(buildDir, "api")

		doFirst {
			classpath = files(subprojects.collect { it.sourceSets.main.compileClasspath })
		}
	}
}
